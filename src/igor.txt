import React from 'react'


function App() {
  return (
    <canvas
      width={window.innerWidth}
      height={window.innerHeight}
      onClick={e => {
        alert(e.clientX)
      }}
    />
  )
}

export default App;

///////////////////////////////////////////////////////////////

import React from 'react'


function draw(ctx,location) {
  console.log(location);
  const {x,y}=location;

  ctx.beginPath();
  ctx.fillStyle="red";
  ctx.fillRect(x, y, 50, 50);
  ctx.stroke();

}

function App() {
  const canvasRef = React.useRef(null)  
  
  return (
    <canvas
      ref={canvasRef}
      width={window.innerWidth}
      height={window.innerHeight}
      onClick={e => {
        const canvas = canvasRef.current
        const ctx = canvas.getContext('2d')
        draw(ctx, { x: e.clientX, y: e.clientY })
      }}
    />
  )
}

export default App;

/////////////////////////////////////////////////////////

import React from 'react'


function draw(ctx,location) {
  console.log(location);
  const {x,y}=location;

  ctx.beginPath();
  ctx.fillStyle="red";
  ctx.fillRect(x, y, 50, 50);
  ctx.stroke();


}

function App() {
  const canvasRef = React.useRef(null);
  const [locations, setLocations] = React.useState([]);  
  
  return (
    <canvas
      ref={canvasRef}
      width={window.innerWidth}
      height={window.innerHeight}
      onClick={e => {
        const canvas = canvasRef.current;
        const ctx = canvas.getContext('2d');
        const newLocation = { x: e.clientX, y: e.clientY };
        setLocations([...locations, newLocation]);
        draw(ctx, newLocation);
      }}
    />
  )
}

export default App;

////////////////////////////////////////////////////////////////

import React from 'react'


function draw(ctx,location) {
  const {x,y}=location;

  ctx.beginPath();
  ctx.fillStyle="red";
  ctx.fillRect(x, y, 50, 50);
  ctx.stroke();


}

function App() {
  const [locations, setLocations] = React.useState([])
  const canvasRef = React.useRef(null)  
  
  React.useEffect(() => {
    const canvas = canvasRef.current;
    const ctx = canvas.getContext('2d');
    ctx.clearRect(0, 0, window.innerHeight, window.innerWidth);
    locations.forEach(location => draw(ctx, location));
  })  
  
  return (
    <canvas
      ref={canvasRef}
      width={window.innerWidth}
      height={window.innerHeight}
      onClick={e => {
        const newLocation = { x: e.clientX, y: e.clientY };
        console.log(newLocation);
        setLocations([...locations, newLocation]);
      }}
    />
  )
}
export default App

///////////////////////////////////////////////////////////////

import React from 'react'


function draw(ctx,location) {
  const {x,y}=location;

  ctx.beginPath();
  ctx.fillStyle="red";
  ctx.fillRect(x, y, 50, 50);
  ctx.stroke();


}

function App() {
  const [locations, setLocations] = React.useState([])
  const canvasRef = React.useRef(null)  
  
  React.useEffect(() => {
    const canvas = canvasRef.current;
    const ctx = canvas.getContext('2d');
    ctx.clearRect(0, 0, window.innerHeight, window.innerWidth);
    locations.forEach(location => draw(ctx, location));
  })  
  
  return (
    <canvas
      ref={canvasRef}
      width={window.innerWidth}
      height={window.innerHeight}
      onClick={e => {
        const newLocation = { x: e.clientX, y: e.clientY };
        console.log(newLocation);
        setLocations([...locations, newLocation]);
      }}
    />
  )
}
export default App

////////////////////////////////////////////////////////////////

*,
*:before,
*:after {
  box-sizing: border-box;
}

body {
  background-color: black;
}
.controls {
  position: absolute;
  top: 0;
  left: 0;
}

button {
  height: 3em;
  width: 6em;
  margin: 1em;
  font-weight: bold;
  font-size: 0.5em;
  text-transform: uppercase;
  cursor: pointer;
  color: white;
  border: 1px solid white;
  background-color: black;
}
button:hover {
  color: black;
  background-color: #00baff;
}

button:focus {
  border: 1px solid #00baff;
}

button:active {
  background-color: #1f1f1f;
  color: white;
}

///////////////////////////////////////////////////////////

import React from 'react'
import './App.css'

function draw(ctx,location) {
  const {x,y}=location;

  ctx.beginPath();
  ctx.fillStyle="red";
  ctx.fillRect(x, y, 50, 50);
  ctx.stroke();


}

function App() {
  const [locations, setLocations] = React.useState([])
  const canvasRef = React.useRef(null)  
  
  React.useEffect(() => {
    const canvas = canvasRef.current;
    const ctx = canvas.getContext('2d');
    ctx.clearRect(0, 0, window.innerHeight, window.innerWidth);
    locations.forEach(location => draw(ctx, location));
  })  
  
  function handleCanvasClick(e) {
    const newLocation = { x: e.clientX, y: e.clientY }
    setLocations([...locations, newLocation])
  }  
  
  function handleClear() {
    setLocations([])
  }  
  
  function handleUndo() {
    setLocations(locations.slice(0, -1))
  }  
  
  return (
    <>
      <button onClick={handleClear}>Clear</button>
      <button onClick={handleUndo}>Undo</button>
      <canvas
        ref={canvasRef}
        width={window.innerWidth}
        height={window.innerHeight}
        onClick={handleCanvasClick}
      />
    </>
  )
}

export default App;

////////////////////////////////////////////////////////////

